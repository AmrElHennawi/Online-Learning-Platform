@inject UserManager<AppUser> UserManager;
@model IEnumerable<AppUser>

@{
    ViewBag.Title = "All Users";
}

<h1>All Users</h1>

@if (Model.Any())
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th style="width: 20%;">First Name</th>
                <th style="width: 20%;">Last Name</th>
                <th style="width: 20%;">Email</th>
                <th style="width: 20%;">Type</th>
                <th style="width: 10%;">Edit</th>
                <th style="width: 10%;">User Active</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                var rowClass = user.IsActive ? "" : "table-secondary";
                <tr class="@rowClass">
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.Email</td>
                    <td>
                        @{
                            IList<string> roles = await UserManager.GetRolesAsync(user);
                            string rolesAsString = string.Join(", ", roles);
                        }
                        @rolesAsString
                    </td>
                    <td>
                        @if (!await UserManager.IsInRoleAsync(user, "Admin"))
                        {
                            <a asp-action="EditRolesInUser" asp-controller="admin" asp-route-id="@user.Id"
                               class="btn btn-primary">
                                Edit User
                            </a>
                        }
                        else
                        {
                            <p>Can't Edit</p>
                        }
                    </td>
                    <td>
                        <form method="post" asp-action="UpdateActive" asp-controller="admin">
                            <input type="hidden" name="userId" value="@user.Id" />

                            <div class="form-check d-flex justify-content-between align-items-center" style="width:100%;">
                                <input type="checkbox" class="form-check-input mt-0" name="active" value="true" @(user.IsActive ? "checked" : "")
                                @(await UserManager.IsInRoleAsync(user, "Admin") ? "disabled" : "") />
                                @if (!await UserManager.IsInRoleAsync(user, "Admin"))
                                {
                                    <button type="submit" class="btn btn-primary p-0">Update</button>
                                }
                            </div>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="card">
        <div class="card-header">
            No users created yet
        </div>
    </div>
}
